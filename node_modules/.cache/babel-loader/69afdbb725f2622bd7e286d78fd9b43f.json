{"ast":null,"code":"import _slicedToArray from \"D:\\\\NB24708\\\\Desktop\\\\ezown\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\NB24708\\\\Desktop\\\\ezown\\\\src\\\\Notes2.js\";\nimport React, { useState } from \"react\";\nimport { TextInputField, Button, Pane, Text, Alert, Textarea } from \"evergreen-ui\";\nimport { Link } from \"react-router-dom\";\nimport useApi from \"./useApi\";\nimport { API_BASE } from \"./contants\";\nexport default function Notes() {\n  const _useState = useState(\"1\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        userId = _useState2[0],\n        setUserId = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        creationDate = _useState6[0],\n        setCreationDate = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        updateDate = _useState8[0],\n        setUpdateDate = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        body = _useState10[0],\n        setBody = _useState10[1];\n\n  const _useApi = useApi(API_BASE),\n        addNoteRequest = _useApi.fetch,\n        loading = _useApi.loading,\n        error = _useApi.error,\n        data = _useApi.data;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Pane, {\n    width: 300,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"default\",\n    padding: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      width: 250\n    },\n    onSubmit: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, error && /*#__PURE__*/React.createElement(Alert, {\n    intent: \"danger\",\n    title: \"We weren\\u2019t able to save your changes\",\n    padding: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextInputField, {\n    required: true,\n    label: \"name\",\n    value: name,\n    onChange: v => {\n      setName(v.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextInputField, {\n    label: \"creationDate\",\n    value: creationDate,\n    onChange: v => {\n      setCreationDate(v.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextInputField, {\n    label: \"updateDate\",\n    value: updateDate,\n    onChange: v => {\n      setUpdateDate(v.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    required: true,\n    label: \"body\",\n    name: \"Note\",\n    placeHolder: \"What's in your mind?\",\n    value: body,\n    onChange: v => {\n      setBody(v.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    isLoading: loading,\n    disabled: !Boolean(name),\n    appearance: \"primary\",\n    type: \"submit\",\n    onClick: () => {\n      addNoteRequest(\"note\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"*/*\",\n          \"Connection\": \"keep-alive\",\n          \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjIiLCJleHAiOjE1OTIxNjYwMTUsImlhdCI6MTU5MjEzMDAxNX0.iKtGgY9I9ucttlzis1NaBvYXflBXzdGcfshi8DFLaZs\"\n        },\n        body: JSON.stringify({\n          username,\n          name,\n          body\n        })\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Get Note\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 7\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pane, {\n    width: 300,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"default\",\n    padding: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    size: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 36\n    }\n  }, \"Sign up\")))));\n}","map":{"version":3,"sources":["D:/NB24708/Desktop/ezown/src/Notes2.js"],"names":["React","useState","TextInputField","Button","Pane","Text","Alert","Textarea","Link","useApi","API_BASE","Notes","userId","setUserId","name","setName","creationDate","setCreationDate","updateDate","setUpdateDate","body","setBody","addNoteRequest","fetch","loading","error","data","display","justifyContent","alignItems","flexDirection","width","e","preventDefault","v","target","value","Boolean","method","mode","cache","headers","JSON","stringify","username","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextInputField, Button, Pane, Text, Alert, Textarea } from \"evergreen-ui\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useApi from \"./useApi\";\r\nimport { API_BASE } from \"./contants\";\r\n\r\nexport default function Notes() {\r\n  const [userId, setUserId] = useState(\"1\");\r\n  const [name, setName] = useState(\"\");\r\n  const [creationDate, setCreationDate] = useState(\"\");\r\n  const [updateDate, setUpdateDate] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const { fetch: addNoteRequest, loading, error, data } = useApi(API_BASE);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      <Pane\r\n        width={300}\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        border=\"default\"\r\n        padding={15}\r\n      >\r\n        <form\r\n          style={{ width: 250 }}\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          {error && (\r\n            <Alert\r\n              intent=\"danger\"\r\n              title=\"We weren’t able to save your changes\"\r\n              padding={1}\r\n            />\r\n          )}\r\n\r\n          <TextInputField\r\n            required\r\n            label=\"name\"\r\n            value={name}\r\n            onChange={v => {\r\n              setName(v.target.value);\r\n            }}\r\n          />\r\n          <TextInputField\r\n            label=\"creationDate\"\r\n            value={creationDate}\r\n            onChange={v => {\r\n              setCreationDate(v.target.value);\r\n            }}\r\n          />\r\n          <TextInputField\r\n            label=\"updateDate\"\r\n            value={updateDate}\r\n            onChange={v => {\r\n              setUpdateDate(v.target.value);\r\n            }}\r\n          /> \r\n          <Textarea\r\n            required\r\n            label=\"body\"\r\n            name=\"Note\"\r\n            placeHolder=\"What's in your mind?\"\r\n            value={body}\r\n            onChange={v => {\r\n              setBody(v.target.value);\r\n            }}\r\n          />\r\n                    <div>\r\n            <Button\r\n              isLoading={loading}\r\n              disabled={!Boolean(name)}\r\n              appearance=\"primary\"\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                addNoteRequest(\"note\", {\r\n                  method: \"POST\",\r\n                  mode: \"cors\",\r\n                  cache: \"no-cache\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"*/*\",\r\n                    \"Connection\": \"keep-alive\",\r\n                    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjIiLCJleHAiOjE1OTIxNjYwMTUsImlhdCI6MTU5MjEzMDAxNX0.iKtGgY9I9ucttlzis1NaBvYXflBXzdGcfshi8DFLaZs\"\r\n                  },\r\n                  body: JSON.stringify({ username, name, body })\r\n                });\r\n              }}\r\n            >\r\n              Get Note\r\n            </Button>\r\n          </div>            \r\n        </form>\r\n      </Pane>\r\n      <div style={{ padding: 7 }}>\r\n        <Pane\r\n          width={300}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          border=\"default\"\r\n          padding={15}\r\n        >\r\n          <Text size={300}>\r\n            Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n          </Text>\r\n        </Pane>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}